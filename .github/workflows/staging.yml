name: test deploy on staging stack
on:
  push:
    branches:
      - main

jobs:
  test-stage:
    # if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    steps:
      - name: git pull && docker-compose up
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_STAGE }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |

            # Add any additional deployment commands
            sudo echo "Deploying via SSH..."
            git -C './${{ github.event.repository.name }}' pull || git clone https://github.com/${{github.repository}}.git './${{ github.event.repository.name }}'

            # Checkout to main branch
            cd ~/${{ github.event.repository.name }}

            # Checkout to main branch
            git checkout main

            # Create folders
            mkdir -p postgresql/
            mkdir -p etc/
            mkdir -p addons/

            # Gain permisson for all folder
            sudo chmod -R 777 postgresql/
            sudo chmod -R 777 etc/
            sudo chmod -R 777 addons/

            # Remove the old .env file if it exists
            sudo rm -f .env
            # Create a new .env file with secrets
            echo "${{ secrets.DOTENV }}" | sudo tee -a .env

            # Run docker compose
            # docker compose \
            #   -p ${{ github.event.repository.name }} \
            #   -f docker/docker-compose.yml \
            #   -f docker/docker-compose.stage.yml \
            #   --env-file ./.env \
            #   up -d

            docker compose -p ${{ github.event.repository.name }} -f ./docker-compose.yml --env-file ./.env up -d

            sudo docker system prune -f
            sudo docker image prune -a --force

            sudo chmod -R 777 postgresql/

            echo "done"
